{
  "address": "0x5ef54d4da3605DA46112384a275e2bEa8609efAf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "BarAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "burn_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "BarBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "BarMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFunds",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "addBarNumWarrantNum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "barNumWarrantNum",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "blacklistUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "Bar_Number",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "Warrant_Number",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferCgoOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x23a2025704edd0d3327920f2679ce43ded57cbe0d112bfba792033284e885a7b",
  "receipt": {
    "to": null,
    "from": "0x08c7b249A76aa982B01FAbc9a4D990BD39D3119a",
    "contractAddress": "0x5ef54d4da3605DA46112384a275e2bEa8609efAf",
    "transactionIndex": 1,
    "gasUsed": "1846575",
    "logsBloom": "0x
    "blockHash": "0x5654b198b35dac5f0f614ec99d587ca25c5b95c6908727ebc1dc390af138ec0c",
    "transactionHash": "0x23a2025704edd0d3327920f2679ce43ded57cbe0d112bfba792033284e885a7b",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 40009350,
        "transactionHash": "0x23a2025704edd0d3327920f2679ce43ded57cbe0d112bfba792033284e885a7b",
        "address": "0x5ef54d4da3605DA46112384a275e2bEa8609efAf",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000008c7b249a76aa982b01fabc9a4d990bd39d3119a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x81d6390714e2d5cdd83815d88205d2c5244259df475dd68d7a8bbeac766dfcb0"
      }
    ],
    "blockNumber": 40009350,
    "cumulativeGasUsed": "1846575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x395132550Fd90EF96C327f6FA086B60706Cc3994"
  ],
  "numDeployments": 1,
  "solcInputHash": "f03465562a2cc0543287f11447c7dcbf",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"BarAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burn_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"BarBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"BarMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFunds\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"addBarNumWarrantNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"barNumWarrantNum\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blacklistUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Bar_Number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Warrant_Number\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferCgoOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CGOController.sol\":\"CGOController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x74b0525c81e47810f1bd795755962bdb84de3a4f71cfcb063f4c4d4999a3e96b\",\"license\":\"MIT\"},\"contracts/CGOController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0 <0.8.0;\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\n// import \\\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.2.0-solc-0.7/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CGOController is Ownable {\\n  address public tokenAddr;\\n\\n  // BarNumber => WarrantNumber\\n  mapping(string => string) public barNumWarrantNum;\\n\\n  // events\\n  event BarMint(\\n    address to,\\n    uint256 amount,\\n    string Bar_Number,\\n    string Warrant_Number\\n  );\\n\\n  event BarBurn(\\n    address burn_from,\\n    uint256 amount,\\n    string Bar_Number,\\n    string Warrant_Number\\n  );\\n\\n  event WithdrawFunds(address to, uint256 amount);\\n\\n  event BarAdded(string Bar_Number, string Warrant_Number);\\n\\n  constructor(address _tokenAddr) {\\n    tokenAddr = _tokenAddr;\\n  }\\n\\n  function mint(\\n    address to,\\n    uint256 amount,\\n    string memory Bar_Number,\\n    string memory Warrant_Number\\n  ) public onlyOwner {\\n    IERC20(tokenAddr).mint(to, amount * 1e18);\\n    if (\\n      keccak256(abi.encodePacked(barNumWarrantNum[Bar_Number])) ==\\n      keccak256(abi.encodePacked(Warrant_Number))\\n    ) {\\n      revert(\\\"Bar already exist\\\");\\n    }\\n    if (amount != 1000) {\\n      revert(\\\"Mint amount should be 1000\\\");\\n    }\\n    barNumWarrantNum[Bar_Number] = Warrant_Number;\\n    emit BarMint(to, amount * 1e18, Bar_Number, Warrant_Number);\\n  }\\n\\n  // burn implementation\\n  function burn(\\n    uint256 amount,\\n    string memory Bar_Number,\\n    string memory Warrant_Number\\n  ) public onlyOwner {\\n    IERC20(tokenAddr).burn(amount * 1e18);\\n    if (\\n      keccak256(abi.encodePacked(barNumWarrantNum[Bar_Number])) !=\\n      keccak256(abi.encodePacked(Warrant_Number))\\n    ) {\\n      revert(\\\"Incorrect Bar details\\\");\\n    }\\n    if (amount != 1000) {\\n      revert(\\\"Burn amount should be 1000\\\");\\n    }\\n    if (IERC20(tokenAddr).balanceOf(address(this)) < amount * 1e18) {\\n      revert(\\\"Insufficient Funds\\\");\\n    }\\n    delete barNumWarrantNum[Bar_Number];\\n    emit BarBurn(address(this), amount * 1e18, Bar_Number, Warrant_Number);\\n  }\\n\\n  function blacklistUpdate(address user, bool value) public virtual onlyOwner {\\n    IERC20(tokenAddr).blacklistUpdate(user, value);\\n  }\\n\\n  function addBarNumWarrantNum(\\n    string memory Bar_Number,\\n    string memory Warrant_Number\\n  ) public onlyOwner {\\n    if (\\n      keccak256(abi.encodePacked(barNumWarrantNum[Bar_Number])) ==\\n      keccak256(abi.encodePacked(Warrant_Number))\\n    ) {\\n      revert(\\\"Bar already exist\\\");\\n    }\\n    barNumWarrantNum[Bar_Number] = Warrant_Number;\\n    emit BarAdded(Bar_Number, Warrant_Number);\\n  }\\n\\n  function withdrawFunds(address to, uint256 amount) public onlyOwner {\\n    IERC20(tokenAddr).transfer(to, amount);\\n    emit WithdrawFunds(to, amount);\\n  }\\n\\n  function transferCgoOwnership(address newOwner) public onlyOwner {\\n    IERC20(tokenAddr).transferOwnership(newOwner);\\n  }\\n}\\n\",\"keccak256\":\"0xf70a775cf2e092a79a16bd75a852d756a52dbfc85adcc7a7c4d143317f648854\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.7.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  function mint(address to, uint256 amount) external;\\n\\n  function burn(uint256 amount) external;\\n\\n  function blacklistUpdate(address user, bool value) external;\\n\\n  function transferOwnership(address newOwner) external;\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender)\\n    external\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xb0714dbe2413f61688a3beb42aaa32469935f194c04023db53edb84d9ae4a4fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610369578063b351dfe814610371578063ba211db01461039f578063c1075329146104cf578063cc49109a146104fb578063f2fde38b14610614576100a9565b80632fb102cf146100ae5780634a681673146101ee5780635fbe4d1d146102145780636037749d14610238578063715018a614610361575b600080fd5b6101ec600480360360808110156100c457600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156100f357600080fd5b82018360208201111561010557600080fd5b803590602001918460018302840111600160201b8311171561012657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561017857600080fd5b82018360208201111561018a57600080fd5b803590602001918460018302840111600160201b831117156101ab57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061063a945050505050565b005b6101ec6004803603602081101561020457600080fd5b50356001600160a01b0316610a8f565b61021c610b50565b604080516001600160a01b039092168252519081900360200190f35b6101ec6004803603604081101561024e57600080fd5b810190602081018135600160201b81111561026857600080fd5b82018360208201111561027a57600080fd5b803590602001918460018302840111600160201b8311171561029b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156102ed57600080fd5b8201836020820111156102ff57600080fd5b803590602001918460018302840111600160201b8311171561032057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b5f945050505050565b6101ec610ec3565b61021c610f65565b6101ec6004803603604081101561038757600080fd5b506001600160a01b0381351690602001351515610f74565b6101ec600480360360608110156103b557600080fd5b81359190810190604081016020820135600160201b8111156103d657600080fd5b8201836020820111156103e857600080fd5b803590602001918460018302840111600160201b8311171561040957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561045b57600080fd5b82018360208201111561046d57600080fd5b803590602001918460018302840111600160201b8311171561048e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061103e945050505050565b6101ec600480360360408110156104e557600080fd5b506001600160a01b03813516906020013561154b565b61059f6004803603602081101561051157600080fd5b810190602081018135600160201b81111561052b57600080fd5b82018360208201111561053d57600080fd5b803590602001918460018302840111600160201b8311171561055e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061166d945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156105d95781810151838201526020016105c1565b50505050905090810190601f1680156106065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ec6004803603602081101561062a57600080fd5b50356001600160a01b0316611713565b61064261180b565b6000546001600160a01b03908116911614610692576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b600154604080516340c10f1960e01b81526001600160a01b038781166004830152670de0b6b3a764000087026024830152915191909216916340c10f1991604480830192600092919082900301818387803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b50505050806040516020018082805190602001908083835b6020831061073b5780518252601f19909201916020918201910161071c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206002836040518082805190602001908083835b602083106107a85780518252601f199092019160209182019101610789565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060405160200180828054600181600116156101000203166002900480156108395780601f10610817576101008083540402835291820191610839565b820191906000526020600020905b815481529060010190602001808311610825575b505091505060405160208183030381529060405280519060200120141561089b576040805162461bcd60e51b815260206004820152601160248201527010985c88185b1c9958591e48195e1a5cdd607a1b604482015290519081900360640190fd5b826103e8146108f1576040805162461bcd60e51b815260206004820152601a60248201527f4d696e7420616d6f756e742073686f756c642062652031303030000000000000604482015290519081900360640190fd5b806002836040518082805190602001908083835b602083106109245780518252601f199092019160209182019101610905565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451610965959194919091019250905061180f565b507f6c5141baea3136c0a6e98d38bfa1d3f439b831aac09095817ef594d75231ed208484670de0b6b3a764000002848460405180856001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156109eb5781810151838201526020016109d3565b50505050905090810190601f168015610a185780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610a4b578181015183820152602001610a33565b50505050905090810190601f168015610a785780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a150505050565b610a9761180b565b6000546001600160a01b03908116911614610ae7576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b6001546040805163f2fde38b60e01b81526001600160a01b0384811660048301529151919092169163f2fde38b91602480830192600092919082900301818387803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b610b6761180b565b6000546001600160a01b03908116911614610bb7576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b806040516020018082805190602001908083835b60208310610bea5780518252601f199092019160209182019101610bcb565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206002836040518082805190602001908083835b60208310610c575780518252601f199092019160209182019101610c38565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206040516020018082805460018160011615610100020316600290048015610ce85780601f10610cc6576101008083540402835291820191610ce8565b820191906000526020600020905b815481529060010190602001808311610cd4575b5050915050604051602081830303815290604052805190602001201415610d4a576040805162461bcd60e51b815260206004820152601160248201527010985c88185b1c9958591e48195e1a5cdd607a1b604482015290519081900360640190fd5b806002836040518082805190602001908083835b60208310610d7d5780518252601f199092019160209182019101610d5e565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451610dbe959194919091019250905061180f565b507fac9bc919b1caca6ecaadfbfafbb1794b941be89e2c6fcefde11f0a91efd1d2198282604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610e23578181015183820152602001610e0b565b50505050905090810190601f168015610e505780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610e83578181015183820152602001610e6b565b50505050905090810190601f168015610eb05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050565b610ecb61180b565b6000546001600160a01b03908116911614610f1b576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610f7c61180b565b6000546001600160a01b03908116911614610fcc576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b6001546040805163166a3bfd60e31b81526001600160a01b03858116600483015284151560248301529151919092169163b351dfe891604480830192600092919082900301818387803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050505050565b61104661180b565b6000546001600160a01b03908116911614611096576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b60015460408051630852cd8d60e31b8152670de0b6b3a76400008602600482015290516001600160a01b03909216916342966c689160248082019260009290919082900301818387803b1580156110ec57600080fd5b505af1158015611100573d6000803e3d6000fd5b50505050806040516020018082805190602001908083835b602083106111375780518252601f199092019160209182019101611118565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206002836040518082805190602001908083835b602083106111a45780518252601f199092019160209182019101611185565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060405160200180828054600181600116156101000203166002900480156112355780601f10611213576101008083540402835291820191611235565b820191906000526020600020905b815481529060010190602001808311611221575b5050915050604051602081830303815290604052805190602001201461129a576040805162461bcd60e51b8152602060048201526015602482015274496e636f7272656374204261722064657461696c7360581b604482015290519081900360640190fd5b826103e8146112f0576040805162461bcd60e51b815260206004820152601a60248201527f4275726e20616d6f756e742073686f756c642062652031303030000000000000604482015290519081900360640190fd5b600154604080516370a0823160e01b81523060048201529051670de0b6b3a76400008602926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561134457600080fd5b505afa158015611358573d6000803e3d6000fd5b505050506040513d602081101561136e57600080fd5b505110156113b8576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b604482015290519081900360640190fd5b6002826040518082805190602001908083835b602083106113ea5780518252601f1990920191602091820191016113cb565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922061142392509050600061189b565b7f69607ed0b791422b8f2da1c708bea51e66affd56d4511e89fd7d0ed6df7a380b3084670de0b6b3a764000002848460405180856001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156114a8578181015183820152602001611490565b50505050905090810190601f1680156114d55780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156115085781810151838201526020016114f0565b50505050905090810190601f1680156115355780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505050565b61155361180b565b6000546001600160a01b039081169116146115a3576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156115f957600080fd5b505af115801561160d573d6000803e3d6000fd5b505050506040513d602081101561162357600080fd5b5050604080516001600160a01b03841681526020810183905281517f21901fa892c430ea8bd38b9390225ac8e67eac75ee10ffba16feefc539a288f9929181900390910190a15050565b80516020818301810180516002808352938301948301949094209390528254604080516001831615610100026000190190921693909304601f810183900483028201830190935282815292919083018282801561170b5780601f106116e05761010080835404028352916020019161170b565b820191906000526020600020905b8154815290600101906020018083116116ee57829003601f168201915b505050505081565b61171b61180b565b6000546001600160a01b0390811691161461176b576040805162461bcd60e51b8152602060048201819052602482015260008051602061191e833981519152604482015290519081900360640190fd5b6001600160a01b0381166117b05760405162461bcd60e51b81526004018080602001828103825260268152602001806118f86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611845576000855561188b565b82601f1061185e57805160ff191683800117855561188b565b8280016001018555821561188b579182015b8281111561188b578251825591602001919060010190611870565b506118979291506118e2565b5090565b50805460018160011615610100020316600290046000825580601f106118c157506118df565b601f0160209004906000526020600020908101906118df91906118e2565b50565b5b8082111561189757600081556001016118e356fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212204f43a8c8270d1856d20351a765f727467fe5f439d55222b7bc67990d591948a664736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30,
        "contract": "contracts/CGOController.sol:CGOController",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1183,
        "contract": "contracts/CGOController.sol:CGOController",
        "label": "tokenAddr",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1187,
        "contract": "contracts/CGOController.sol:CGOController",
        "label": "barNumWarrantNum",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}